@mixin respond($breakpoint) {
  @if $breakpoint == phone {
    @media (max-width: $breakpoint-phone) { @content };
  }
  @if $breakpoint == tab-port {
    @media (max-width: $breakpoint-tab-port) { @content };
  }
  @if $breakpoint == tab-land {
    @media (max-width: $breakpoint-tab-land) { @content };
  }
  @if $breakpoint == desktop {
    @media (min-width: $breakpoint-desktop) { @content };
  }
}

@mixin flex-center {
  display: flex;
  justify-content: center;
  align-items: center;
}

@mixin grid($columns: 12, $gap: $spacing-medium) {
  display: grid;
  grid-template-columns: repeat($columns, 1fr);
  gap: $gap;
}

@mixin responsive-grid($min-width: 300px, $gap: $spacing-medium) {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax($min-width, 1fr));
  gap: $gap;
}

@mixin absolute-center {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

@mixin clearfix {
  &::after {
    content: '';
    display: table;
    clear: both;
  }
}

@mixin truncate($width: 100%) {
  max-width: $width;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

@mixin custom-scrollbar($width: 8px, $track-color: $color-grey-light-2, $thumb-color: $color-primary) {
  &::-webkit-scrollbar {
    width: $width;
  }

  &::-webkit-scrollbar-track {
    background: $track-color;
  }

  &::-webkit-scrollbar-thumb {
    background-color: $thumb-color;
    border-radius: 20px;
  }
}

@mixin box-shadow($level: 'medium') {
  @if $level == 'light' {
    box-shadow: $box-shadow-light;
  } @else if $level == 'medium' {
    box-shadow: $box-shadow-medium;
  } @else if $level == 'heavy' {
    box-shadow: $box-shadow-heavy;
  }
}

@mixin transition($property: all, $duration: $transition-duration-default, $timing: $transition-timing-default) {
  transition: $property $duration $timing;
}

@mixin container {
  width: 100%;
  max-width: 1200px;
  margin: 0 auto;
  padding: 0 $spacing-medium;

  @include respond(tab-land) {
    max-width: 900px;
  }

  @include respond(tab-port) {
    max-width: 600px;
  }

  @include respond(phone) {
    padding: 0 $spacing-small;
  }
}

@mixin button($bg-color: $color-primary, $text-color: $color-white) {
  display: inline-block;
  padding: $spacing-small $spacing-medium;
  background-color: $bg-color;
  color: $text-color;
  border-radius: $border-radius-default;
  font-weight: 500;
  border: none;
  cursor: pointer;
  text-align: center;
  @include transition;

  &:hover {
    background-color: darken($bg-color, 10%);
  }

  &:active {
    transform: translateY(1px);
  }
}

@mixin focus-outline {
  outline: 2px solid $color-primary;
  outline-offset: 2px;
}

@mixin aspect-ratio($width: 16, $height: 9) {
  position: relative;

  &::before {
    content: '';
    display: block;
    padding-top: ($height / $width) * 100%;
  }

  > * {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
  }
}
@mixin box-shadow($level: 'medium') {
  @if $level == 'light' {
    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
  } @else if $level == 'medium' {
    box-shadow: 0 4px 10px rgba(0, 0, 0, 0.15);
  } @else if $level == 'heavy' {
    box-shadow: 0 6px 20px rgba(0, 0, 0, 0.2);
  }
}